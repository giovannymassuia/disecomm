<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>io.giovannymassuia.disecomm</groupId>
    <artifactId>api-gateway</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>api-gateway</name>
    <description>api-gateway</description>
    <properties>
        <java.version>21</java.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>1.37.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-bom-alpha</artifactId>
                <version>2.3.0-alpha</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.giovannymassuia.disecomm</groupId>
            <artifactId>protobuf</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-graphql</artifactId>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>jakarta.annotation</groupId>-->
        <!--            <artifactId>jakarta.annotation-api</artifactId>-->
        <!--            <version>3.0.0</version>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- OTEL -->
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-spring-boot-starter</artifactId>
        </dependency>
        <!-- Needed for OTEL tracing -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-otel</artifactId>
        </dependency>

        <dependency>
            <groupId>net.devh</groupId>
            <artifactId>grpc-client-spring-boot-starter</artifactId>
            <version>3.0.0.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.graphql</groupId>
            <artifactId>spring-graphql-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.github.kobylynskyi</groupId>
                <artifactId>graphql-codegen-maven-plugin</artifactId>
                <version>5.10.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <graphqlSchemas>
                                <rootDir>src/main/resources/graphql</rootDir>
                                <includePattern>.*\.graphqls</includePattern>
                            </graphqlSchemas>
                            <outputDir>${project.build.directory}/generated-sources/graphql
                            </outputDir>
                            <apiPackageName>io.giovannymassuia.disecomm.apigateway.graphql.api
                            </apiPackageName>
                            <modelPackageName>io.giovannymassuia.disecomm.apigateway.graphql.model
                            </modelPackageName>
                            <modelNameSuffix>GraphqlModel</modelNameSuffix>
                            <modelValidationAnnotation>jakarta.validation.constraints.NotNull
                            </modelValidationAnnotation>
                            <apiRootInterfaceStrategy>INTERFACE_PER_SCHEMA
                            </apiRootInterfaceStrategy>
                            <apiNamePrefixStrategy>FILE_NAME_AS_PREFIX</apiNamePrefixStrategy>
                            <resolverArgumentAnnotations>
                                org.springframework.graphql.data.method.annotation.Argument
                            </resolverArgumentAnnotations>
                            <parametrizedResolverAnnotations>
                                org.springframework.graphql.data.method.annotation.SchemaMapping(typeName="{{TYPE_NAME}}")
                            </parametrizedResolverAnnotations>
                            <configurationFiles>
                                <configurationFile>src/main/resources/graph-codegen.json
                                </configurationFile>
                            </configurationFiles>
                            <!--                            <parentInterfaces>-->
                            <!--                                <queryResolver>graphql.kickstart.tools.GraphQLQueryResolver-->
                            <!--                                </queryResolver>-->
                            <!--                                <mutationResolver>graphql.kickstart.tools.GraphQLMutationResolver-->
                            <!--                                </mutationResolver>-->
                            <!--                                <subscriptionResolver>-->
                            <!--                                    graphql.kickstart.tools.GraphQLSubscriptionResolver-->
                            <!--                                </subscriptionResolver>-->
                            <!--                                <resolver>-->
                            <!--                                    <![CDATA[graphql.kickstart.tools.GraphQLResolver<{{TYPE}}>]]>-->
                            <!--                                </resolver>-->
                            <!--                            </parentInterfaces>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <agents>
                        <agent>${project.build.directory}/opentelemetry-javaagent-2.1.0.jar</agent>
                    </agents>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>io.opentelemetry.javaagent</groupId>
                                    <artifactId>opentelemetry-javaagent</artifactId>
                                    <version>2.3.0</version>
                                    <type>jar</type>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
