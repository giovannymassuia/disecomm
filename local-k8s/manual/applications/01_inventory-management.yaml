apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-management
  namespace: disecomm-apps
spec:
  replicas: 1
  selector: # pods that this deployment will manage
    matchLabels:
      app: inventory-management
  template:
    metadata:
      name: inventory-management # the name of the pod itself
      labels: # labels of the pods, this must match the selector above
        app: inventory-management
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: app # name of the container inside the pod
          image: myregistry.localhost:5001/disecomm-inventory-management:local
          imagePullPolicy: Always # always pull the image from the registry
          ports:
            - containerPort: 8080 # the port the container listens on
              name: http # the name of the port
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: HTTP_SERVER_PORT
              value: "8080"
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m" # means 500 millicores, or 0.5 cores
            requests:
              memory: "512Mi"
              cpu: "500m" # means 500 millicores, or 0.5 cores
          startupProbe:
            initialDelaySeconds: 30
            httpGet:
              port: 8080
              path: /actuator/health/liveness
            failureThreshold: 30 # setting a high value to avoid false positives
            periodSeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
            initialDelaySeconds: 45
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
            initialDelaySeconds: 45
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: inventory-management-svc
  namespace: disecomm-apps
spec:
  selector: # the pods that this service will route traffic to
    # selector must match the labels of the pods, it uses include all the labels
    app: inventory-management
  ports:
    - protocol: TCP # the protocol that the service should use, the default is TCP
      port: 8080 # the port the clients will connect to
      targetPort: 8080  # the port the pods are listening on, must match the containerPort
      name: http # the name of the port
  type: ClusterIP


---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: inventory-management-hpa
  namespace: disecomm-apps
spec:
  minReplicas: 1
  maxReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: inventory-management
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 30 # how long to wait before scaling down
      policies:
        - type: Pods
          value: 1 # the number of pods to keep
          periodSeconds: 30 # how long to wait before removing pods
    scaleUp:
      stabilizationWindowSeconds: 0 # how long to wait before scaling up
      policies:
        - type: Pods
          value: 1 # the number of pods to add each time
          periodSeconds: 30 # how long to wait before adding more pods

