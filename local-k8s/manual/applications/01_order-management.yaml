apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-management
  namespace: disecomm-apps
spec:
  replicas: 1
  selector: # pods that this deployment will manage
    matchLabels:
      app: order-management
  template:
    metadata:
      name: order-management # the name of the pod itself
      labels: # labels of the pods, this must match the selector above
        app: order-management
    spec:
      containers:
        - name: app # name of the container inside the pod
          image: myregistry.localhost:5001/disecomm-order-management:local
          imagePullPolicy: Always # always pull the image from the registry
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 5102
              name: grpc
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: HTTP_SERVER_PORT
              value: "8080"
            - name: GRPC_SERVER_PORT
              value: "5102"
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m" # means 500 millicores, or 0.5 cores
            requests:
              memory: "512Mi"
              cpu: "500m" # means 100 millicores, or 0.1 cores

---
apiVersion: v1
kind: Service
metadata:
  name: order-management-svc
  namespace: disecomm-apps
  annotations:
    traefik.ingress.kubernetes.io/service.serversscheme: h2c
spec:
  selector: # the pods that this service will route traffic to
    # selector must match the labels of the pods, it uses include all the labels
    app: order-management
  ports:
    - port: 8080
      name: http
    - port: 5102
      name: grpc
  type: ClusterIP



---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: order-management-hpa
  namespace: disecomm-apps
spec:
  minReplicas: 1
  maxReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: order-management
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 30 # how long to wait before scaling down
      policies:
        - type: Pods
          value: 1 # the number of pods to keep
          periodSeconds: 30 # how long to wait before removing pods
    scaleUp:
      stabilizationWindowSeconds: 0 # how long to wait before scaling up
      policies:
        - type: Pods
          value: 1 # the number of pods to add each time
          periodSeconds: 30 # how long to wait before adding more pods
